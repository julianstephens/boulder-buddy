/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /**
     * Healthcheck
     * @description retrieve server status
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "*/*": components["schemas"]["router.Response"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "*/*": components["schemas"]["router.Response"];
          };
        };
      };
    };
  };
  "/mesos": {
    /**
     * Retrieve mesocyles
     * @description get all mesocyles for current user
     */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "*/*": components["schemas"]["handlers.Mesocycle"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "*/*": components["schemas"]["handlers.Error"];
          };
        };
      };
    };
    /**
     * Create a mesocyle
     * @description create a new mesocycle
     */
    post: {
      /** @description new mesocycle info */
      requestBody: {
        content: {
          "*/*": components["schemas"]["handlers.Mesocycle"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "*/*": components["schemas"]["handlers.Mesocycle"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "*/*": components["schemas"]["handlers.Error"];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "*/*": components["schemas"]["handlers.Error"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "handlers.Error": {
      /** @description Machine-readable error code. */
      code?: components["schemas"]["utils.errorCode"];
      /** @description Some context of error */
      fields?: string[];
      /** @description Human-readable message. */
      message?: string;
      /** @description Logical operation. */
      op?: string;
      /** @description Wrapped error */
      stack?: Record<string, never>;
    };
    "handlers.Mesocycle": {
      description?: string;
      endDate: number;
      goal: string;
      isActive: boolean;
      maxMicros: number;
      startDate: number;
    };
    "router.Response": {
      message?: string;
    };
    /** @enum {string} */
    "utils.errorCode": "conflict" | "internal" | "invalid" | "not_found" | "not_modified" | "already_exists" | "permission_denied" | "unauthenticated" | "cannot_decode" | "cannot_encode" | "cannot_parse" | "undefined_behavior" | "unsupported" | "test_error_code";
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
